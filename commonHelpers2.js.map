{"version":3,"file":"commonHelpers2.js","sources":["../src/js/api-requests.js","../src/js/books-list.js","../src/js/books-by-category.js","../src/js/bestsellers.js"],"sourcesContent":["import axios from 'axios';\n\nexport class API_SERVICE {\n  #BASE_URL = 'https://books-backend.p.goit.global/';\n\n  constructor(selectedCategory, bookId) {\n    this.selectedCategory = selectedCategory;\n    this.bookId = bookId;\n  }\n  // -------------Запит на категорії-----------------------------\n  fetchBooksCategoryList() {\n    return axios.get(`${this.#BASE_URL}books/category-list`);\n  }\n\n  // ---------------Запит на ТОП книги(бестселлери)-----------------\n\n  fetchBestSellersBooks() {\n    return axios.get(`${this.#BASE_URL}books/top-books`);\n  }\n\n  // -------------Запит на категорію книги, примає назву категорії книги (категорії в сайд барі і по кнопці see more) -----------------\n\n  fetchBooksByCategory(selectedCategory) {\n    return axios.get(\n      `${this.#BASE_URL}books/category?category=${selectedCategory}`\n    );\n  }\n  // -------------Запит на інформацію про книгу (приймає ID книги) -----------------\n  fetchBookById(bookId) {\n    return axios.get(`${this.#BASE_URL}books/${bookId}`);\n  }\n}\n","import { API_SERVICE } from './api-requests';\nconst bookCollection = document.querySelector('.books-gallery');\n\nconst api = new API_SERVICE();\n\nexport default async function createMarkup(category) {\n  const res = await api.fetchBooksByCategory(category);\n  //   console.log(res);\n  const books = await res.data;\n  //   console.log(books);\n\n  //   function removeLastWord(category) {\n  //     let words = category.split(' ');\n  //     words.pop();\n  //     let result = words.join(' ');\n  //     console.log(result);\n  //     return result;\n  //   }\n\n  //   function LastWord(category) {\n  //     var words = category.trim().split(' ');\n  //     console.log(words); //Splitting sentence into words\n  //     return words[words.length - 1]; //Returning the last word\n  //   }\n\n  function collectionMarkup() {\n    return `<h1 class=\"collection-title\">${category} <span>${category}</span></h1>\n    <ul class=\"top-books rendering-gap js-list-rendering\">\n\n    ${books\n      .map(({ title, book_image, author, _id }) => {\n        return `<li class=\"book-card\" data-id=\"${_id}\">\n        <div class=\"book-thumb\">\n      <img class=\"book-cover\" src=\"${book_image}\" alt=\"${title}\">\n      <div class=\"quick-view\">\n                <p class=\"quick-view-text\">QUICK VIEW</p>\n                </div>\n                </div>\n                <div class=\"book-descr\">\n      <h2 class=\"book-name\">${title}</h2>\n      <h3 class=\"book-author\">${author}</h3>\n      </div>\n  </li>`;\n      })\n      .join('')}\n    </ul>\n    \n    `;\n  }\n\n  bookCollection.innerHTML = collectionMarkup();\n}\n","import { API_SERVICE } from './api-requests';\nimport createMarkup from './books-list';\nimport renderCategories from './bestsellers';\n// import { reportsFailure } from './notificationsNotiflix';\n// import { Loading } from 'notiflix';\n\nconst api = new API_SERVICE();\n\nconst categoriesList = document.querySelector('.book-category__list');\n// const bookCollection = document.querySelector('.books-gallery');\n\nasync function getBooksCategoryList() {\n  try {\n    // Loading.standard('Loading...');\n    //  if (!response.ok) {\n    //   throw new Error();\n    //    return\n    // }\n    const resp = await api.fetchBooksCategoryList();\n    // Loading.remove('Loading...');\n    const data = await resp.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n    // reportsFailure('Sorry, no books 555 were found. Please try again.');\n  }\n}\n\nasync function getBookCategory() {\n  // try {\n\n  const categories = await getBooksCategoryList();\n\n  const markup = categories\n    .map(cat => `<li class=\"book-category__list-item\">${cat.list_name}</li>`)\n    .join('');\n  categoriesList.insertAdjacentHTML('beforeend', markup);\n}\n// catch (error) {\n//   console.log(error);\n//    reportsFailure('Sorry, no books were found. Please try again.')\n// }\n// }\n\nif (categoriesList) {\n  getBookCategory();\n\n  categoriesList.addEventListener('click', onCategoryListSearchCategory);\n}\n\nasync function onCategoryListSearchCategory(e) {\n  if (e.target.nodeName !== 'LI') {\n    return;\n  }\n\n  const category = e.target.textContent;\n  highlightCategory(category);\n\n  if (category !== 'All categories') {\n    await createMarkup(category);\n  } else {\n    await renderCategories();\n  }\n}\n\nexport function highlightCategory(category) {\n  const items = document.querySelectorAll('.book-category__list-item');\n\n  for (const item of items) {\n    if (item.textContent === category) item.classList.add('active');\n    else item.classList.remove('active');\n  }\n}\n","import { API_SERVICE } from './api-requests';\nimport { highlightCategory } from './books-by-category';\n\n// import { reportsFailure } from './notificationsNotiflix';\n// import { Loading } from 'notiflix';\n\nconst api = new API_SERVICE();\n\nconst bookGallery = document.querySelector('.books-gallery');\n\nasync function getBestSellers() {\n  try {\n    // Loading.standard('Loading...');\n    const response = await api.fetchBestSellersBooks();\n    // Loading.remove('Loading...');\n    const bestSellers = await response.data;\n    return bestSellers;\n  } catch (error) {\n    console.log(error);\n    // Loading.remove('Loading...');\n    // reportsFailure('Sorry, no books were found. Please try again.');\n  }\n}\n\nfunction createBookCategoryMarkup(category) {\n  console.log(category);\n  return `\n    <li class=\"book-category-item\">\n      <p class=\"book-category\">${category.list_name}</p>\n      <ul class=\"top-books bestsel-books js-list-rendering\">\n        ${category.books\n          .map(book => {\n            return `\n              <li class=\"book-card flex-element\" data-id=\"${book._id}\">\n              <div class=\"book-thumb\">\n                <img class=\"book-cover\" src=\"${book.book_image}\" alt=\"${book.title}\"/>\n                <div class=\"quick-view\">\n                <p class=\"quick-view-text\">QUICK VIEW</p>\n                </div>\n                </div>\n                <div class=\"book-descr\">\n                <h2 class=\"book-name\">${book.title}</h2>\n                <h3 class=\"book-author\">${book.author}</h3>\n                </div>\n              </li>\n            `;\n          })\n          .join('')}\n      </ul>\n      <button class=\"book-card-btn\" type=\"button\" data-category=\"${\n        category.list_name\n      }\">see more</button>\n    </li>\n  `;\n}\n\nexport default async function renderCategories() {\n  let bookCategories = '<ul class=\"top-books rendering-gap js-list-rendering\">';\n  try {\n    const topBooks = await getBestSellers();\n    for (let category of topBooks) {\n      bookCategories += createBookCategoryMarkup(category);\n    }\n    bookCategories += '</ul>';\n    bookGallery.innerHTML = `<h1 class=\"collection-title\">Best Sellers <span>Books</span></h1>`;\n    const bookCollection = document.createElement('div');\n    bookCollection.className = 'books-collection';\n    bookCollection.innerHTML = bookCategories;\n    bookCollection.addEventListener('click', onSeeMoreBtnClick);\n    bookGallery.appendChild(bookCollection);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nif (bookGallery) {\n  try {\n    renderCategories();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function onSeeMoreBtnClick(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  const target = e.target;\n  try {\n    if (target.matches('button[data-category]')) {\n      const category = target.dataset.category;\n\n      const titleCollection = bookGallery.querySelector('.collection-title');\n      titleCollection.innerHTML = `${removeLastWord(category)} <span>${LastWord(\n        category\n      )}</span>`;\n\n      highlightCategory(category);\n      await createBooksOnSeeMoreBtn(category);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction removeLastWord(category) {\n  let words = category.split(' ');\n  words.pop();\n  let result = words.join(' ');\n  return result;\n}\n\nfunction LastWord(category) {\n  var words = category.trim().split(' '); //Splitting sentence into words\n  return words[words.length - 1]; //Returning the last word\n}\n\nasync function createBooksOnSeeMoreBtn(category) {\n  try {\n    Loading.standard('Loading...');\n    const res = await api.fetchBooksByCategory(category);\n    const books = await res.data;\n    Loading.remove('Loading...');\n    function collectionMarkup() {\n      return `\n    <ul class=\"top-books rendering-gap js-list-rendering\">\n    ${books\n      .map(({ title, book_image, author, _id }) => {\n        return `\n        <li class=\"book-card\" data-id=${_id}>\n        <div class=\"book-thumb\">\n         <img class=\"book-cover\" src=\"${book_image}\" alt=\"${title}\">\n         <div class=\"quick-view\">\n          <p class=\"quick-view-text\">QUICK VIEW</p>\n         </div>\n        </div>\n        <div class=\"book-descr\">\n      <h2 class=\"book-name\">${title}</h2>\n      <h3 class=\"book-author\">${author}</h3>\n      </div>\n  </li>\n  `;\n      })\n      .join('')}\n    </ul>`;\n    }\n    const bookCollection = bookGallery.querySelector('.books-collection');\n    bookCollection.innerHTML = collectionMarkup();\n  } catch (error) {\n    console.log(error);\n    Loading.remove('Loading...');\n    reportsFailure('Sorry, no books  were found. Please try again.');\n  }\n}\n"],"names":["API_SERVICE","selectedCategory","bookId","__privateAdd","_BASE_URL","axios","__privateGet","bookCollection","api","createMarkup","category","books","collectionMarkup","title","book_image","author","_id","categoriesList","getBooksCategoryList","error","getBookCategory","markup","cat","onCategoryListSearchCategory","e","highlightCategory","renderCategories","items","item","bookGallery","getBestSellers","createBookCategoryMarkup","book","bookCategories","topBooks","onSeeMoreBtnClick","target","titleCollection","removeLastWord","LastWord","createBooksOnSeeMoreBtn","words"],"mappings":"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"}